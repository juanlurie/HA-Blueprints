blueprint:
  name: TX Ultimate Gesture Control (4 Touchfields, optional actions)
  description: >
    Control lights or areas using swipes and touches from a Sonoff TX Ultimate panel
    with ESPHome. Supports swipe up/down and 4 touchfields with toggle actions.
    All actions except device selection are optional.

  domain: automation
  input:
    tx_device:
      name: TX Ultimate Device
      description: Select your TX Ultimate device running ESPHome.
      selector:
        device:
          integration: esphome

    swipe_up_target:
      name: Swipe Up - Turn On
      description: Lights or area to turn ON when swipe up is detected.
      default: []
      selector:
        target:

    swipe_down_target:
      name: Swipe Down - Turn Off
      description: Lights or area to turn OFF when swipe down is detected.
      default: []
      selector:
        target:

    touchfield_1_toggle_target:
      name: Touchfield 1 - Toggle
      description: Lights to toggle when touchfield 1 is pressed.
      default: []
      selector:
        target:

    touchfield_2_toggle_target:
      name: Touchfield 2 - Toggle
      description: Lights to toggle when touchfield 2 is pressed.
      default: []
      selector:
        target:

    touchfield_3_toggle_target:
      name: Touchfield 3 - Toggle
      description: Lights to toggle when touchfield 3 is pressed.
      default: []
      selector:
        target:

    touchfield_4_toggle_target:
      name: Touchfield 4 - Toggle
      description: Lights to toggle when touchfield 4 is pressed.
      default: []
      selector:
        target:

mode: single

trigger:
  - platform: state
    entity_id:
      - binary_sensor.swipe_up
      - binary_sensor.swipe_down
      - binary_sensor.touchfield_1
      - binary_sensor.touchfield_2
      - binary_sensor.touchfield_3
      - binary_sensor.touchfield_4
    from: 'off'
    to: 'on'

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'binary_sensor.swipe_up' }}"
        sequence:
          - condition: template
            value_template: "{{ (swipe_up_target | length) > 0 }}"
          - service: light.turn_on
            target: !input swipe_up_target

      - conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'binary_sensor.swipe_down' }}"
        sequence:
          - condition: template
            value_template: "{{ (swipe_down_target | length) > 0 }}"
          - service: light.turn_off
            target: !input swipe_down_target

      - conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'binary_sensor.touchfield_1' }}"
        sequence:
          - condition: template
            value_template: "{{ (touchfield_1_toggle_target | length) > 0 }}"
          - service: light.toggle
            target: !input touchfield_1_toggle_target

      - conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'binary_sensor.touchfield_2' }}"
        sequence:
          - condition: template
            value_template: "{{ (touchfield_2_toggle_target | length) > 0 }}"
          - service: light.toggle
            target: !input touchfield_2_toggle_target

      - conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'binary_sensor.touchfield_3' }}"
        sequence:
          - condition: template
            value_template: "{{ (touchfield_3_toggle_target | length) > 0 }}"
          - service: light.toggle
            target: !input touchfield_3_toggle_target

      - conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'binary_sensor.touchfield_4' }}"
        sequence:
          - condition: template
            value_template: "{{ (touchfield_4_toggle_target | length) > 0 }}"
          - service: light.toggle
            target: !input touchfield_4_toggle_target
