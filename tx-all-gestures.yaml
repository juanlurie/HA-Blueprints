blueprint:
  name: TX Gesture Control (Reliable Version)
  description: >
    Responds to TX Ultimate swipe or touch gestures and performs the selected action
    (toggle, turn_on, turn_off) on provided targets. Each gesture is optional.
  domain: automation

  input:
    swipe_up_entity:
      name: Swipe Up Sensor
      default: ""
      selector:
        entity:
          domain: binary_sensor

    swipe_up_action:
      name: Swipe Up Action
      default: toggle
      selector:
        select:
          options:
            - toggle
            - turn_on
            - turn_off

    swipe_up_targets:
      name: Swipe Up Targets
      default: []
      selector:
        target:

    swipe_down_entity:
      name: Swipe Down Sensor
      default: ""
      selector:
        entity:
          domain: binary_sensor

    swipe_down_action:
      name: Swipe Down Action
      default: toggle
      selector:
        select:
          options:
            - toggle
            - turn_on
            - turn_off

    swipe_down_targets:
      name: Swipe Down Targets
      default: []
      selector:
        target:

mode: single

trigger:
  - platform: state
    entity_id: !input swipe_up_entity
    from: "off"
    to: "on"
    id: swipe_up

  - platform: state
    entity_id: !input swipe_down_entity
    from: "off"
    to: "on"
    id: swipe_down

action:
  - choose:
      - conditions: "{{ trigger.id == 'swipe_up' }}"
        sequence:
          - choose:
              - conditions: "{{ swipe_up_action == 'toggle' }}"
                sequence:
                  - service: light.toggle
                    target: !input swipe_up_targets
              - conditions: "{{ swipe_up_action == 'turn_on' }}"
                sequence:
                  - service: light.turn_on
                    target: !input swipe_up_targets
              - conditions: "{{ swipe_up_action == 'turn_off' }}"
                sequence:
                  - service: light.turn_off
                    target: !input swipe_up_targets

      - conditions: "{{ trigger.id == 'swipe_down' }}"
        sequence:
          - choose:
              - conditions: "{{ swipe_down_action == 'toggle' }}"
                sequence:
                  - service: light.toggle
                    target: !input swipe_down_targets
              - conditions: "{{ swipe_down_action == 'turn_on' }}"
                sequence:
                  - service: light.turn_on
                    target: !input swipe_down_targets
              - conditions: "{{ swipe_down_action == 'turn_off' }}"
                sequence:
                  - service: light.turn_off
                    target: !input swipe_down_targets
